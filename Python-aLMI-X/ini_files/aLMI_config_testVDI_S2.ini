# This is the config file for the aLMI -- "bogus" parameters for S2
# It is read into python using the ConfigParser module that is in the python base package.
# Note that section names are case-sensitive, while parameter names are case-insensitive.

[inputParameters]

SIOP_SETS_FILE = ./data/siops_MODIS_all_CLT4.nc

# NOTE: these variable names MUST match the names in the ANN file used as input to aLMI!
# inputSpectrumVarNames = ["Rrs_ANN_412" , "Rrs_ANN_443" , "Rrs_ANN_488" , "Rrs_ANN_531" , "Rrs_ANN_547" , "Rrs_ANN_667" , "Rrs_ANN_678" , "Rrs_ANN_748" ]
### inputSpectrumVarNames = ["Rrs_412" , "Rrs_443" , "Rrs_488" , "Rrs_531" , "Rrs_547" , "Rrs_667" , "Rrs_678" , "Rrs_748" ]

# Sentinel 2 bands:
# Wavelengths:              N/A        443                         490              N/A        560               665             705                    740
# inputSpectrumVarNames = ["------" , "lmbskyg_coastal_aerosol" , "lmbskyg_blue" , "------" , "lmbskyg_green" , "lmbskyg_red" , "lmbskyg_red_edge_1" , "lmbskyg_red_edge_2" ]
inputSpectrumVarNames = ["lmbskyg_coastal_aerosol" , "lmbskyg_blue" , "lmbskyg_green" , "lmbskyg_red" , "lmbskyg_red_edge_1" , "lmbskyg_red_edge_2" ]

# From Aquatic_ARD dataset / VDI notebook:
# lmbskyg_coastal_aerosol 	lmbskyg_coastal_aerosol 	int16 	1 	-999 	[lmbskyg_band01, lmbskyg_coastal_aerosol] 	NaN 	NaN
# lmbskyg_blue 	lmbskyg_blue 	int16 	1 	-999 	[lmbskyg_band02, lmbskyg_blue] 	NaN 	NaN
# lmbskyg_green 	lmbskyg_green 	int16 	1 	-999 	[lmbskyg_band03, lmbskyg_green] 	NaN 	NaN
# lmbskyg_red 	lmbskyg_red 	int16 	1 	-999 	[lmbskyg_band04, lmbskyg_red] 	NaN 	NaN
# lmbskyg_red_edge_1 	lmbskyg_red_edge_1 	int16 	1 	-999 	[lmbskyg_band05, lmbskyg_red_edge_1] 	NaN 	NaN
# lmbskyg_red_edge_2 	lmbskyg_red_edge_2 	int16 	1 	-999 	[lmbskyg_band06, lmbskyg_red_edge_2] 	NaN 	NaN
# lmbskyg_red_edge_3 	lmbskyg_red_edge_3 	int16 	1 	-999 	[lmbskyg_band07, lmbskyg_red_edge_3] 	NaN 	NaN
# lmbskyg_nir_1 	lmbskyg_nir_1 	int16 	1 	-999 	[lmbskyg_band08, lmbskyg_nir_1] 	NaN 	NaN
# lmbskyg_nir_2 	lmbskyg_nir_2 	int16 	1 	-999 	[lmbskyg_band08a, lmbskyg_nir_2] 	NaN 	NaN
# lmbskyg_swir_2 	lmbskyg_swir_2 	int16 	1 	-999 	[lmbskyg_band11, lmbskyg_swir_2] 	NaN 	NaN
# lmbskyg_swir_3 	lmbskyg_swir_3 	int16 	1 	-999 	[lmbskyg_band12, lmbskyg_swir_3] 	NaN 	NaN



# NOTE: useWavelengths must have same count as inputSpectrumVarNames
### useWavelengths =        [         411.5,          441.5,          486.5,          528.5,          551.0,          665.5,          676.5,          746.5]
useWavelengths =        [         441.5,          486.5,          551.0,          665.5,          676.5,          746.5]
tolerance = 5.0
# (nm)

# components: must contain some or all of "CHL", "CDOM", "NAP"
components = ["CHL", "CDOM", "NAP"]

chunkProcessConfig = {'costType':'RMSE', 'minValidConc':0.00001, 'outputFillValue':-999., 'costThreshhold':100.}

# Possible types are reflAboveSurf|reflBelowSurf|uIopRatio
inputType = reflAboveSurf

SolarZenithBandName = oa_solar_zenith

numberOfLinesPerChunk = 500

verbosity = 1


[outputParameters]

###outWavelengthLabels =   [    "412" ,     "441" ,     "488" ,     "531" ,     "551" ,     "667" ,     "678" ,     "748" ]
outWavelengthLabels =   [    "441" ,     "488" ,     "551" ,     "667" ,     "678" ,     "748" ]
# NOTE: outWavelengthLabels must have same count as inputSpectrumVarNames
#       outWavelengthLabels values must be within tolerance of useWavelengths (corresponding array values)

# Possible types are reflAboveSurf|reflBelowSurf|uIopRatio|""    (if "", then outputType is inputType)
outputType = ""
# (may be blank, but need "=" or ":")


[optionalParameters]
# In this section we can specify which optional variables to calculate (and write to the output file).
# Some or all of these config parameters are optional in the config file.

# n_bands
#== _10nm_ file required if any of 'Kd_par_MIM', 'Kd_490_MIM', 'SD_MIM' is specified
SIOP_SETS_10nm_FILE = ./data/siops_10nm_all_CLT4.nc
# if Kd_490_MIM: Kd_WavelengthsRange must contain the value 490 (multiples of 10nm)
Kd_WavelengthsRange = [420, 750]
# min, max wavelengths (nm) used for Kd_par_MIM, Kd_490_MIM, and SD_MIM calculations
Kd_par_MIM
Kd_490_MIM
SD_MIM

#==> maybe add Forel-Ule output here later on... (?)


# These are optional (but a_wavelength must be specified if any of the a_*_MIM options are specified, to select the wavelength):
# a_wavelength value must be in outWavelengthLabels
a_wavelength = 441
a_phy_MIM
a_CDOM_MIM
a_NAP_MIM
a_P_MIM
a_CDM_MIM
a_tot_MIM

# These are optional (but bb_wavelength must be specified if any of the bb_*_MIM options are specified, to select the wavelength):
# bb_wavelength value must be in outWavelengthLabels
bb_wavelength = 551
bb_phy_MIM
bb_NAP_MIM
bb_P_MIM


[ggParameters]
#
g0 = %(g0Lee)s
g1 = %(g1Lee)s

#from Lee 1999 AO
g1Lee = 0.17
g0Lee = 0.084
#from Lee 2002 AO
g1QAA = 0.1247 
g0QAA = 0.0895
#from Gordon 1988
g1Gordon = 0.079
g0Gordon = 0.094

ggLee = "    0.084    0.17"
# multiple values

g0LeeFloat = 0.084

